{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/wikea-code","result":{"data":{"markdownRemark":{"id":"ea2e6b1e-0d5a-560e-aceb-24cb848ba268","html":"<p><img src=\"https://github.com/yesl-kim/yesl-kim.github.io/blob/develop/images/wikea-tab-navigation.gif?raw=true\" alt=\"react로 구현한 GNB 최종 결과물\"></p>\n<h2 id=\"기존-코드-분석\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4-%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D\" aria-label=\"기존 코드 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존 코드 분석</h2>\n<ul>\n<li>2depth 구조</li>\n<li>상위 카테고리 <code class=\"language-text\">&lt;li></code> 의 자식요소로 그에 대응하는 하위 카테고리 메뉴 위치<br>\n<code class=\"language-text\">nav > li > (nav > li ...)</code></li>\n<li>상위 카테고리 클릭시 클래스명으로 DOM 제어</li>\n<li>\n<p><strong>하위 카테고리 <code class=\"language-text\">&lt;nav></code>에 aria-hidden 속성</strong><br>\n보조 기술 사용자에게 혼란을 주지 않기 위해 화면에 보이지 않는 하위 카테고리에 <code class=\"language-text\">{aria hidden: true}</code> 속성 부여</p>\n<ul>\n<li>aria hidden<br>\n스크린 리더와 같은 보조 기술에 탐색될지 말지를 정하는 속성<br>\n기본값은 undefined<br>\n화면에 시각적으로 보이지 않는 요소(display : block 혹은 visibillity : hidden) 는 보조기술에도 감지되지 않는다.<br>\n화면에 시각적으로 렌더링되지 않지만 명시적으로 숨겨지지 않는 요소는 여전히 접근성 트리에 존재 (overflow: hidden으로 가려지는 요소)<br>\n속성을 부여한 요소와 하위요소 모두 접근성 트리에서 제거</li>\n</ul>\n</li>\n</ul>\n<p>위에 정리한대로 기존 웹 사이트에서는 상위-하위 카티고리 요소가 부모-자식관계로 구조가 짜여있었다. 즉 모든 상하위 카테고리 UI를 모두 렌더한 후에 속성으로 화면에서 보이지 않게 처리한 듯했다. 하지만 사실 상위 카테고리와 하위 카테고리는 <strong>각각 데이터만 바뀔 분 같은 UI</strong>이기 때문에 리액트에서는 그렇게 요소를 렌더할 필요가 없다고 생각했다. (물론 그렇게 한 이유가 있었겠지만!)</p>\n<p>결국 상위 카테고리와 하위 카테고리를 각각 하나의 컴포넌트로, 코드 상에서 형제 관계로 위치시켰다. (상하위 카테고리도 하나의 컴포넌트로 통합하려고 했지만, 생각해보니 둘의 역할이 달랐다. 상: 하위를 연다. 하: 페이지를 이동시킨다.)</p>\n<h2 id=\"구현-과정\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84-%EA%B3%BC%EC%A0%95\" aria-label=\"구현 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현 과정</h2>\n<h3 id=\"로직\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%A7%81\" aria-label=\"로직 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로직</h3>\n<ol>\n<li>상위 카테고리 클릭</li>\n<li>클릭된 상위 카테고리 저장(activeCategory)</li>\n<li>클릭된 상위 카테고리에 대한 하위 카테고리의 데이터를 렌더 (&#x3C;—객체 매핑)</li>\n</ol>\n<h3 id=\"데이터-구조\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0\" aria-label=\"데이터 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 구조</h3>\n<p>서버에서 받는 데이터의 구조는 다음과 같았다.</p>\n<p>사실 원하는 데이터 구조는 ‘상위 카테고리명’에 대한 하위 카테고리 데이터를 담은 객체 형태(<code class=\"language-text\">{상위 카테고리명 : [ ...하위 카테고리 데이터 ]}</code>)였지만 이런 구조는 백에서 줄때나, 프론트에서 받을 때나 좋지 않은 구조라고 했다.</p>\n<p>그래서 이런 데이터를 받은 후 프론트 단에서 데이터를 가공하여 저장하기로 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n\tcategory <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"korean_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"상위 카테고리명\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"english_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"category name\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"sub_category\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"korean_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"하위 카테고리명\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"english_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"category name\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"작성한-코드\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%84%B1%ED%95%9C-%EC%BD%94%EB%93%9C\" aria-label=\"작성한 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작성한 코드</h3>\n<ol>\n<li><code class=\"language-text\">{상위 카테고리명 : [ ...하위 카테고리 ]}</code> 형태로 데이터 가공하기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getMenus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> menus <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CATEGORY_TEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> menu <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> menus<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setCategories</span><span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setSubCategories</span><span class=\"token punctuation\">(</span>\n      menu<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">sub<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span>sub<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>korean_name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> c<span class=\"token punctuation\">.</span>sub_category<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">getMenus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>기능 구현</li>\n<li><strong>Category</strong><br>\n상위 메뉴 컴포넌트<br>\n카테고리 클릭시, 상위 카테고리 한글명을 인자로 받아 <code class=\"language-text\">activeCategory</code> state 에 저장하는 함수 <code class=\"language-text\">handleSubNavOn</code> 호출</li>\n<li><strong>SubCategory</strong><br>\n하위 메뉴 컴포넌트<br>\n<code class=\"language-text\">activeCategory</code> state가 업데이트 되면 하위 카테고리 데이터 변경</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>categories<span class=\"token punctuation\">,</span> setCategories<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>subCategories<span class=\"token punctuation\">,</span> setSubCategories<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>activeCategory<span class=\"token punctuation\">,</span> setActiveCategory<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleSubNavOn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setActiveCategory</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"main_nav_box\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Category\n      list<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>categories<span class=\"token punctuation\">}</span>\n      handleClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleSubNavOn<span class=\"token punctuation\">}</span>\n      activeItem<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>activeCategory<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>activeCategory <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>SubCategory\n        title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>activeCategory<span class=\"token punctuation\">}</span>\n        list<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>subCategories<span class=\"token punctuation\">[</span>activeCategory<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/wikea-code","tagSlugs":["/tag/회고/"]},"frontmatter":{"date":"2020-05-22 19:43:00","description":"WIKEA 프로젝트 코드 정리","tags":["회고"],"title":"객체 매핑을 활용한 2depth 탭 네비게이션","socialImage":null}}},"pageContext":{"slug":"/posts/wikea-code"}},"staticQueryHashes":["251939775","401334301","825871152"]}